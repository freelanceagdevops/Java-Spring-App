# CI/CD for Setup AWS infra with Terraform and Java Spring Application

name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:

  terraform:
    name: Apply Terraform
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.6

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Terraform Init
        run: |
          cd terraform
          terraform init

      - name: Terraform Plan
        run: |
          cd terraform
          terraform plan

      - name: Terraform Apply
        if: github.ref == 'refs/heads/main'
        run: |
          cd terraform
          terraform apply -auto-approve

  build-java-app:
    name: Build and Test Java Application
    runs-on: ubuntu-latest
    needs: terraform

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Java 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Build and package application
        run: mvn clean package

      - name: Run tests
        run: mvn test

  code-quality:
    name: Code Quality Analysis
    runs-on: ubuntu-latest
    needs: terraform

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Java 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Install dependencies
        run: mvn dependency:resolve

      - name: Run SpotBugs
        run: mvn spotbugs:check

      - name: Run Checkstyle
        run: mvn checkstyle:check

  docker-build-push:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    needs: [build-java-app, code-quality]

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/spring-boot-app:${{ github.run_id }}

  update-helm-chart:
    name: Update Helm Chart with New Tag
    runs-on: ubuntu-latest
    needs: docker-build-push

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Update Helm Chart Tag
        run: |
          sed -i 's/tag: .*/tag: "${{ github.run_id }}"/' helm/java-spring-app-chart/values.yaml

      - name: Commit and Push Changes
        run: |
          git config --global user.email "freelanceagdevops"
          git config --global user.name "freelanceagdevops@gmail.com"
          git add helm/java-spring-app-chart/values.yaml
          git commit -m "Update Helm chart with tag ${{ github.run_id }}"
          git push
